name: Pull request

on:
  pull_request:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  checks: write
  statuses: write
  id-token: write
  pull-requests: write
  repository-projects: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detekt:
    name: Detekt - PR
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Detekt - PR
        run: ./gradlew detektAll

      - name: Fix path in logs
        uses: richardrigutins/replace-in-files@v2.1.12
        if: ${{ !cancelled() }}
        with:
          files: ${{ github.workspace }}/**/build/reports/detekt/*.xml
          search-text: ${{ github.workspace }}/
          replacement-text: ''

      - name: Publish detekt results
        if: ${{ !cancelled()}}
        uses: gmazzo/publish-report-annotations@v1.14.3
        with:
          reports: ${{ github.workspace }}/**/build/reports/detekt/*.xml
          checkName: Detekt - PR
          workflowSummary: true
          warningsAsErrors: false
          checksSummary: full
          failOnError: true

  ktlint:
    name: Ktlint - PR
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Ktlint - PR
        run: ./gradlew ktlintCheck

      - name: Fix path in logs
        uses: richardrigutins/replace-in-files@v2.1.12
        if: ${{ !cancelled() }}
        with:
          files: ${{ github.workspace }}/**/build/reports/ktlint/**/*.xml
          search-text: ${{ github.workspace }}/
          replacement-text: ''

      - name: Publish ktlint results
        if: ${{ !cancelled()}}
        uses: gmazzo/publish-report-annotations@v1.14.3
        with:
          reports: ${{ github.workspace }}/**/build/reports/ktlint/**/*.xml
          checkName: Ktlint - PR
          workflowSummary: true
          warningsAsErrors: false
          checksSummary: full
          failOnError: true

  build-lib-base:
    name: Build base - PR
    if: ${{ success() }}
    needs: [ detekt, ktlint ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew :ui-base:build

  build-lib-ui:
    strategy:
      matrix:
        config: [
          { target: tiles, module: ui-tiles, task: build, continueOnError: false },
          { target: tiles expanded, module: ui-tiles-extended, task: build, continueOnError: false },
        ]
    name: Build ${{ matrix.config.target }} - PR
    if: ${{ success() }}
    needs: [ detekt, build-lib-base ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew :${{ matrix.config.module }}:${{ matrix.config.task }}

  build-sample:
    strategy:
      matrix:
        config: [
          { target: android,  module: androidApp , os: ubuntu-latest, tasks: assembleDebug },
          { target: iOS,  module: iosApp , os: macos-latest, tasks: compileKotlinIosArm64 },
          { target: js,  module: jsApp , os: ubuntu-latest, tasks: jsBrowserDistribution },
          { target: wasm,  module: wasmApp , os: ubuntu-latest, tasks: wasmJsBrowserDistribution },
          { target: desktop,  module: desktopApp , os: ubuntu-latest, tasks: assemble }
        ]
    if: ${{ success() }}
    needs: [ build-lib-ui ]
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Build sample ${{ matrix.config.target }} - PR
        continue-on-error: false
        run: ./gradlew :samples:${{ matrix.config.module }}:${{ matrix.config.tasks }}

  check-sign:
    name: Check signature - PR
    if: ${{ success() }}
    needs: [ build-sample ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Check signature - PR
        run: ./gradlew signReleasePublication -Psigning.secretKeyRingFile=../secrets.gpg -Psigning.keyId=${{ secrets.GPG_KEY_NAME }} -Psigning.password=${{ secrets.GPG_PASSPHRASE }}

  fake-publish:
    name: Fake publish - PR
    if: ${{ success() }}
    needs: [ build-sample ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Publish to MavenLocal
        run: ./gradlew publishToMavenLocal -Psigning.secretKeyRingFile=../secrets.gpg -Psigning.keyId=${{ secrets.GPG_KEY_NAME }} -Psigning.password=${{ secrets.GPG_PASSPHRASE }}

  publish-dry:
    name: Dry run publish - PR
    if: ${{ success() }}
    needs: [ check-sign, build-sample ]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17

      - name: Publish to MavenCentral (dry)
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --max-workers 1 -Psigning.secretKeyRingFile=../secrets.gpg -Psigning.keyId=${{ secrets.GPG_KEY_NAME }} -Psigning.password=${{ secrets.GPG_PASSPHRASE }} -PmavenCentralUsername=${{ secrets.OSSRH_USERNAME }} -PmavenCentralPassword=${{ secrets.OSSRH_PASSWORD }} --dry-run
