[versions]
core-ktx = "1.12.0"
androidxannotations = "1.7.1"
androidxactivity = "1.9.0"
androidxpreference = "1.2.1"

compose = "2024.02.02"
composeMaterial3 = "1.2.0-rc01"

gradleNexusStagingPlugin = "0.30.0"
publishPlugin = "1.3.0"
mavenPlugin = "0.28.0"

agp = "8.5.0-beta01"
compose-plugin = "1.6.2"

kotlin = "2.0.0-RC3"

android-minSdk = "21"
android-minSdkSample = "26"
android-compileSdk = "34"
android-targetSdk = "34"

multiplatformSettings = "1.1.1"

namespace = "com.alorma.compose.settings"

detekt = "1.23.6"
compose-detekt-rules = "0.0.26"

kotlinx-immutable = "0.3.7"

windowSizeClass = "0.5.0"

screenshot = "0.0.1-alpha01"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxactivity" }
androidx-preference-preference = { module = "androidx.preference:preference", version.ref = "androidxpreference" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "androidxpreference" }

plugin-gradle-nexus-staging = { module = "io.codearte.gradle.nexus:gradle-nexus-staging-plugin", version.ref = "gradleNexusStagingPlugin" }
plugin-gradle-publish = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "publishPlugin" }
plugin-gradle-maven-publish = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "mavenPlugin" }

multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatform-settings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }

compose-detekt-rules = { group = "com.twitter.compose.rules", name = "detekt", version.ref = "compose-detekt-rules" }

kotlinx-immutable= { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinx-immutable" }

windowSizeClass = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "windowSizeClass" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

screenshot = { id = "com.android.compose.screenshot", version.ref = "screenshot"}
